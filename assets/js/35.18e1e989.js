(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{410:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"netdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netdata"}},[t._v("#")]),t._v(" Netdata")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.discordapp.com/attachments/396964573007052800/549687338352115715/netdata.gif",alt:"Netdata"}})]),t._v(" "),s("h3",{attrs:{id:"installation-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-linux"}},[t._v("#")]),t._v(" Installation (Linux)")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -Ss https://my-netdata.io/kickstart.sh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("(do not "),s("code",[t._v("sudo")]),t._v(" this command, it will do it by itself as needed)")]),t._v(" "),s("h3",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),s("p",[t._v("To access the netdata dashboard, navigate with your browser to:")]),t._v(" "),s("blockquote",[s("p",[t._v("http://your.server.ip:19999/")])]),t._v(" "),s("h3",{attrs:{id:"starting-and-stopping-netdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#starting-and-stopping-netdata"}},[t._v("#")]),t._v(" Starting and stopping Netdata")]),t._v(" "),s("p",[t._v("Netdata installer integrates Netdata to your init / systemd environment.\nTo start/stop Netdata, depending on your environment, you should use:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("systemctl start netdata and systemctl stop netdata\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" netdata start and "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" netdata stop\n/etc/init.d/netdata start and /etc/init.d/netdata stop\n")])])]),s("h3",{attrs:{id:"monitoring-mysql-postgressql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monitoring-mysql-postgressql"}},[t._v("#")]),t._v(" Monitoring MySQL/ PostgresSQL")]),t._v(" "),s("p",[t._v("run")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" /etc/netdata/edit-config python.d/nginx.conf\n")])])]),s("p",[t._v("and check if python.d enabled - if not then enable it")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable / disable the whole python.d.plugin (all its modules)")]),t._v("\nenabled: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ----------------------------------------------------------------------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable / Disable python.d.plugin modules")]),t._v("\ndefault_run: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n")])])]),s("p",[t._v("restart netdata using")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("systemctl restart netdata\n")])])]),s("p",[t._v("For postgres you have to run")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-psycopg2\n")])])]),s("p",[t._v("For MySQL you have to install the python library MySQLdb")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-pip python-dev libmysqlclient-dev\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" mysqlclient\n")])])]),s("p",[t._v("now run")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /usr/bin/python /usr/libexec/netdata/plugins.d/python\n")])])]),s("p",[t._v("and enable the plugins in "),s("code",[t._v("/etc/netdata/netdata.conf")]),t._v("\nit should look like this:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[plugins]\n\t# PATH environment variable = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\n\tPYTHONPATH environment variable = /usr/libexec/netdata/plugins.d:/usr/bin:/sbin:/usr/local/bin:/usr/local/sbin\n\tproc = yes\n\tdiskspace = yes\n\tcgroups = yes\n\ttc = yes\n\tidlejitter = yes\n\tenable running new plugins = yes\n\tcheck for new plugins every = 60\n\tapps = yes\n\tfping = yes\n\tgo.d = yes\n\tcharts.d = yes\n\tnode.d = yes\n\tpython.d = yes\n")])])]),s("p",[t._v("create "),s("code",[t._v("mysql.conf")]),t._v(" and/or "),s("code",[t._v("postgres.conf")]),t._v(" in "),s("code",[t._v("/etc/netdata/python.d/")])]),t._v(" "),s("p",[t._v("and paste + edit this lines")]),t._v(" "),s("blockquote",[s("p",[t._v("mysql.conf")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("priority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90100")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("MYSQL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DB_USER_NAME"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DB_PASSWORD"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/run/mysqld/mysqld.sock"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("postgres.conf")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Postgres"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DB_NAME"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DB_USER_PASSWORD"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5432")]),t._v("\n")])])]),s("p",[t._v("Finally restart netdata")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("systemctl restart netdata\n")])])]),s("p",[t._v("and open "),s("code",[t._v("http://your.server.ip:19999")])]),t._v(" "),s("p",[t._v("It might take a few second for netdata to detect the new plugins\nIn case you can not see it simply press F5.")]),t._v(" "),s("p",[t._v("You should be able to see your newly added plugins on the right sidebar!")]),t._v(" "),s("h3",{attrs:{id:"discord-notifications"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#discord-notifications"}},[t._v("#")]),t._v(" Discord Notifications")]),t._v(" "),s("ul",[s("li",[t._v("Go to "),s("code",[t._v("/etc/netdata/")]),t._v(" and open "),s("code",[t._v("health_alarm_notify.conf")])]),t._v(" "),s("li",[t._v("Search for "),s("code",[t._v('SEND_DISCORD="YES"')])]),t._v(" "),s("li",[t._v("paste and edit this lines")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#------------------------------------------------------------------------------\n# discord (discordapp.com) global notification options\n\n# multiple recipients can be given like this:\n#                  "CHANNEL1 CHANNEL2 ..."\n\n# enable/disable sending discord notifications\nSEND_DISCORD="YES"\n\n# Create a webhook by following the official documentation -\n# https://support.discordapp.com/hc/en-us/articles/228383668-Intro-to-Webhooks\nDISCORD_WEBHOOK_URL="YOUR_WEBHOOK_URL_HERE"\n\n# if a role\'s recipients are not configured, a notification will be send to\n# this discord channel (empty = do not send a notification for unconfigured\n# roles):\nDEFAULT_RECIPIENT_DISCORD="alarms"\n\n\n#------------------------------------------------------------------------------\n')])])]),s("p",[t._v("don't forget to save and restart netdata!")]),t._v(" "),s("h3",{attrs:{id:"uninstall-netdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uninstall-netdata"}},[t._v("#")]),t._v(" Uninstall netdata")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/src/netdata.git./netdata-uninstaller.sh --force\n")])])]),s("h3",{attrs:{id:"resources"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[t._v("#")]),t._v(" Resources")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/netdata/netdata",target:"_blank",rel:"noopener noreferrer"}},[t._v("Netdata Github"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.netdata.cloud/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Netdata Docs"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.netdata.cloud/health/notifications/discord/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discord Webhook"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"other-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-tools"}},[t._v("#")]),t._v(" Other tools")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://grafana.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Grafana"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);